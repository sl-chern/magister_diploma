{
  "name": "microservices-splitdb-with-gateway-and-rabbitmq",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "cross-env NODE_OPTIONS='--inspect-brk' nest start",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "typeorm": "ts-node --project tsconfig.tsnode.json ../../node_modules/typeorm/cli",
    "migration:run": "npm run development typeorm migration:run -- -d ./src/config/database-migrations.config.ts",
    "migration:generate": "cross-env SERVICE_TYPE=other cross-var npm run development typeorm -- -d ./src/config/database-migrations.config.ts migration:generate ./src/database/${SERVICE_TYPE}-database/migrations/$npm_config_migration_name",
    "migration:create": "cross-env SERVICE_TYPE=other cross-var npm run typeorm -- migration:create ./src/database/${SERVICE_TYPE}-database/migrations/$npm_config_migration_name",
    "migration:revert": "npm run development typeorm -- -d ./src/config/database-migrations.config.ts migration:revert",
    "development": "dotenv-run-script .env.dev --",
    "seed:user": "ts-node --project tsconfig.tsnode.json ./src/database/user-database/seed/seed.ts",
    "seed:quote": "ts-node --project tsconfig.tsnode.json ./src/database/quote-database/seed/seed.ts",
    "seed:other": "ts-node --project tsconfig.tsnode.json ./src/database/other-database/seed/seed.ts",
    "seed": "npm run seed:user && npm run seed:quote && npm run seed:other",
    "start:docker": "docker-compose --env-file ./.env.dev -f ./compose/gateway.yml -f ./compose/rabbitmq.yml -f ./compose/db.yml -f ./compose/user-service.yml -f ./compose/quote-service.yml -f ./compose/other-services.yml up -d",
    "stop:docker": "docker-compose --env-file ./.env.dev down"
  },
  "dependencies": {
    "@nestjs/cache-manager": "^3.0.0",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.0",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/microservices": "^11.1.2",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/typeorm": "^11.0.0",
    "@repo/auth": "*",
    "@repo/redis": "*",
    "@repo/utilities": "*",
    "amqplib": "^0.10.8",
    "bcryptjs": "^2.4.3",
    "cache-manager-redis-yet": "^5.1.5",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cookie-parser": "^1.4.7",
    "cross-env": "^7.0.3",
    "csv-parse": "^5.6.0",
    "dotenv": "^16.4.7",
    "enforce-unique": "^1.3.0",
    "http-proxy": "^1.18.1",
    "jsonwebtoken": "^9.0.2",
    "mysql2": "^3.12.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.13.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.20",
    "typeorm-extension": "^3.7.1"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@repo/typescript-config": "*",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/bcryptjs": "^2.4.6",
    "@types/cookie-parser": "^1.4.8",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^6.0.2",
    "cross-var": "^1.1.0",
    "dotenv-run-script": "^0.4.1",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^15.14.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
