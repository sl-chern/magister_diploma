services:
  postgres_user:
    image: postgres:latest
    restart: on-failure
    env_file: ../.env.dev
    environment:
      POSTGRES_DB: ${DB_USER_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    #   PG_DATA: /var/lib/postgresql/data
    # volumes:
    #   - pgdata:/var/lib/postgresql/data
    ports:
      - ${DB_USER_PORT}:${DB_USER_PORT}
    command: -p ${DB_USER_PORT}
    networks:
      - loadbalancing

  postgres_quote:
    image: postgres:latest
    restart: on-failure
    env_file: ../.env.dev
    environment:
      POSTGRES_DB: ${DB_QUOTE_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    #   PG_DATA: /var/lib/postgresql/data
    # volumes:
    #   - pgdata:/var/lib/postgresql/data
    ports:
      - ${DB_QUOTE_PORT}:${DB_QUOTE_PORT}
    command: -p ${DB_QUOTE_PORT}
    networks:
      - loadbalancing

  postgres_other:
    image: postgres:latest
    restart: on-failure
    env_file: ../.env.dev
    environment:
      POSTGRES_DB: ${DB_OTHER_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    #   PG_DATA: /var/lib/postgresql/data
    # volumes:
    #   - pgdata:/var/lib/postgresql/data
    ports:
      - ${DB_OTHER_PORT}:${DB_OTHER_PORT}
    command: -p ${DB_OTHER_PORT}
    networks:
      - loadbalancing

  redis:
    image: redis:latest
    ports: 
      - ${REDIS_PORT}:${REDIS_PORT}
    env_file: ../.env.dev
    command: redis-server --requirepass ${REDIS_PASS} --port ${REDIS_PORT}
    networks:
      - loadbalancing

networks:
  loadbalancing:
